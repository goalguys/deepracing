include(FindProtobuf)
find_package(Protobuf REQUIRED)
protobuf_generate_cpp(${PROJECT_NAME}_PROTO_SRC ${PROJECT_NAME}_PROTO_HEADER F1UDPData.proto TimestampedImage.proto)
message("Generated sources: ${${PROJECT_NAME}_PROTO_SRC}")
message("Generated header: ${${PROJECT_NAME}_PROTO_HEADER}")
message("Including protobuf library headers: ${Protobuf_INCLUDE_DIR}")
message("Including autogenerated protobuf paths: ${ProtobufIncludePath}")
message("Linking against protobuf libraries: ${Protobuf_LIBRARIES}")
set(ProtobufIncludePath ${CMAKE_CURRENT_BINARY_DIR}
    CACHE INTERNAL "Path to generated protobuf files.")

add_library(${PROJECT_NAME}_proto ${${PROJECT_NAME}_PROTO_SRC})
target_include_directories(${PROJECT_NAME}_proto PRIVATE ${ProtobufIncludePath} ${Protobuf_INCLUDE_DIR})
target_link_libraries(${PROJECT_NAME}_proto ${Protobuf_LIBRARIES})

add_executable(protobuf_test protobuf_test.cpp)
target_include_directories(protobuf_test PRIVATE ${ProtobufIncludePath} ${Protobuf_INCLUDE_DIR})
target_link_libraries(protobuf_test ${PROJECT_NAME}_proto)

add_executable(${PROJECT_NAME}_read_image_tag read_image_tag.cpp)
target_include_directories(${PROJECT_NAME}_read_image_tag PRIVATE ${ProtobufIncludePath} ${Protobuf_INCLUDE_DIR})
target_link_libraries(${PROJECT_NAME}_read_image_tag ${PROJECT_NAME}_proto ${Boost_LIBRARIES})

add_executable(${PROJECT_NAME}_read_udp_tag read_udp_tag.cpp)
target_include_directories(${PROJECT_NAME}_read_udp_tag PRIVATE ${ProtobufIncludePath} ${Protobuf_INCLUDE_DIR})
target_link_libraries(${PROJECT_NAME}_read_udp_tag ${PROJECT_NAME}_proto ${Boost_LIBRARIES})


